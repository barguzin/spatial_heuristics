Gurobi Optimizer version 9.5.1 build v9.5.1rc2 (win64)
Thread count: 12 physical cores, 24 logical processors, using up to 24 threads
Optimize a model with 51 rows, 150 columns and 320 nonzeros
Model fingerprint: 0xb9947200
Variable types: 0 continuous, 150 integer (150 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e+00, 1e+02]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+01, 1e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 19 rows and 84 columns
Presolve time: 0.00s
Presolved: 32 rows, 66 columns, 147 nonzeros
Variable types: 0 continuous, 66 integer (66 binary)
Found heuristic solution: objective 1552.0000000

Root relaxation: objective 2.018000e+03, 27 iterations, 0.00 seconds (0.00 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

*    0     0               0    2018.0000000 2018.00000  0.00%     -    0s

Explored 1 nodes (27 simplex iterations) in 0.00 seconds (0.00 work units)
Thread count was 24 (of 24 available processors)

Solution count 3: 2018 1552 -0 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.018000000000e+03, best bound 2.018000000000e+03,defaultdict(<class 'set'>, {1: {27}, 2: {27, 28}, 3: {28}, 4: {46}, 5: {20, 46}, 6: {0, 20}, 7: {0, 24, 20, 15}, 8: {37, 15}, 9: {37}, 11: {17, 27}, 12: {27, 28}, 13: {28}, 14: {48, 18, 46}, 15: {48, 18, 46}, 16: {0, 20}, 17: {0, 15}, 20: {17, 30}, 21: {17}, 22: {42}, 23: {42, 5}, 24: {48, 36, 5}, 25: {48, 49, 18}, 26: {49}, 27: {4}, 29: {38}, 30: {30}, 32: {42}, 33: {42, 36, 5}, 34: {33, 36, 5, 39}, 35: {33, 49, 39}, 36: {49, 4}, 37: {4}, 39: {38, 6, 47}, 43: {9}, 44: {9, 39, 33}, 45: {33, 3, 39}, 49: {6, 47}, 51: {2}, 52: {25, 2, 26}, 53: {32, 9, 26, 25}, 54: {32, 3, 9, 12, 19, 26}, 55: {19, 3}, 56: {3}, 57: {11, 22}, 58: {11, 44}, 59: {44}, 60: {13}, 61: {2, 45}, 62: {25, 2, 10, 45}, 63: {10, 12, 25, 26, 31}, 64: {32, 12, 31}, 65: {19, 3}, 66: {7, 40, 22, 23, 29}, 67: {11, 22, 7}, 68: {44, 22}, 69: {44}, 70: {16, 13}, 71: {16, 45}, 72: {16, 1, 10, 45}, 73: {10, 43, 31}, 74: {43, 31}, 75: {40, 29, 23}, 76: {40, 23, 29, 7}, 77: {7}, 81: {16}, 82: {1, 35}, 83: {1, 35, 14, 43}, 84: {8, 43, 14}, 85: {8}, 86: {23}, 88: {21}, 89: {21}, 90: {41}, 92: {1, 35}, 93: {34, 35, 14}, 94: {8, 34, 14}, 95: {8}, 98: {21}, 99: {21}, 0: set(), 10: set(), 18: set(), 19: set(), 28: set(), 31: set(), 38: set(), 40: set(), 41: set(), 42: set(), 46: set(), 47: set(), 48: set(), 50: set(), 78: set(), 79: set(), 80: set(), 87: set(), 91: set(), 96: set(), 97: set()})
[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
 96 97 98 99]
